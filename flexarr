#!/bin/bash
# flexarr: a FlexVolume driver for CIFS or local direct mount
# version 0.1.0
# Copyright (c) 2024, Chris Danis
# Licensed under the AGPL license
# https://www.gnu.org/licenses/agpl-3.0.html

# Check the command
case "$1" in
  init)
    if ! command -v jq &> /dev/null; then
      echo '{"status": "Failure", "message": "jq is not installed"}'
      exit 1
    fi

    if ! command -v mount.cifs &> /dev/null; then
      echo '{"status": "Failure", "message": "mount.cifs is not installed"}'
      exit 1
    fi

    echo '{"status": "Success", "capabilities": {"attach": false}}'
    exit 0
    ;;
  mount)
    MOUNT_DIR=$2
    PARAMS=$3

    NAS_HOSTNAME=$(jq -r '.nasHostname' <<< "$PARAMS")
    NAS_LOCAL_PATH=$(jq -r '.nasLocalPath' <<< "$PARAMS")
    NAS_NETWORK_PATH=$(jq -r '.nasNetworkPath' <<< "$PARAMS")

    # Read readOnly, mount options, and FsGroup
    READ_ONLY=$(jq -r '.readOnly // "false"' <<< "$PARAMS")
    MOUNT_OPTIONS=$(jq -r '.mountOptions // ""' <<< "$PARAMS")
    FS_GROUP=$(jq -r '."kubernetes.io/mounterArgs.FsGroup" // empty' <<< "$PARAMS")
    export USER=$(jq -r '."kubernetes.io/secret/username"' <<< "$PARAMS" | base64 --decode)
    export PASSWD=$(jq -r '."kubernetes.io/secret/password"' <<< "$PARAMS" | base64 --decode)
    if [ "$(hostname)" == "$NAS_HOSTNAME" ]; then
      # Local direct mount
      ERROR_MSG=$(mount --bind "$NAS_LOCAL_PATH" "$MOUNT_DIR" 2>&1)
    else
      # CIFS mount
      OPTIONS=()
      if [ "$READ_ONLY" == "true" ]; then
        OPTIONS+=("ro")
      fi
      if [ -n "$MOUNT_OPTIONS" ]; then
        OPTIONS+=("$MOUNT_OPTIONS")
      fi
      if [ -n "$FS_GROUP" ]; then
        OPTIONS+=("gid=$FS_GROUP")
      fi
      OPTIONS=$(IFS=,; echo "${OPTIONS[*]}")
      ERROR_MSG=$(mount -t cifs "$NAS_NETWORK_PATH" "$MOUNT_DIR" -o "$OPTIONS" 2>&1)
    fi

    if [ "$?" -eq 0 ]; then
      echo '{"status": "Success"}'
    else
      echo "{\"status\": \"Failure\", \"message\": $(jq -sR . <<< "$ERROR_MSG")}"
    fi
    exit 0
    ;;
  unmount)
    # Unmount logic
    MOUNT_DIR=$2
    ERROR_MSG=$(umount "$MOUNT_DIR" 2>&1)
    if [ "$?" -eq 0 ]; then
      echo '{"status": "Success"}'
    else
      echo "{\"status\": \"Failure\", \"message\": $(jq -sR . <<< "$ERROR_MSG")}"
    fi
    exit 0
    ;;
  *)
    echo '{"status": "Not supported"}'
    exit 1
    ;;
esac
